; ---------------------------
; Follow planning income 
; ---------------------------
[default]
include = app-trunk

[from-trunk-other]
include = app-trunk

[from-trunk-sip]
include = app-trunk

[from-trunk-iax]
include = app-trunk

[from-trunk-dahdi]
include = app-trunk

[from-exten-sip]
include = app-hints
include = parkedcalls
include = app-exten

[from-exten-iax]
include = app-hints
include = parkedcalls
include = app-exten

[from-exten-dahdi]
include = app-hints
include = parkedcalls
include = app-exten

[from-exten-custom]
include = app-hints
include = parkedcalls
include = app-exten

[from-queue]
include = app-hints
include = parkedcalls
include = app-exten

; ---------------------------
; applications
; ---------------------------
[app-trunk]
; NO DID CALL IN
exten => s,1,NoOp(TRUNK CALL IN START)
exten => s,n,AGI(agi://127.0.0.1/didsearch)
exten => s,n,hangup
; DID CALL IN
exten => _X.,1,NoOp(TRUNK CALL IN DID ${EXTEN})
exten => _X.,n,Set(CHANNEL(language)=${CURLANG})
exten => _X.,n,Ringing()
exten => _X.,n,Wait(2)
exten => _X.,n,Set(__FRI2_EFET_ONETOUCHMONITOR=3)
exten => _X.,n,AGI(agi://127.0.0.1/router,routerline=2,callednum=${EXTEN})
exten => _X.,n,ExecIf($["${FRI2_AGISTATUS}" != "1"]?Macro(REASON,NOVALID))
exten => _X.,n,ExecIf($["${FRI2_AGISTATUS}" != "1"]?Hangup())
exten => _X.,n,ExecIf($["${FRI2_ROUTER_PROCESS_MODE}" == "1"]?AGI(agi://127.0.0.1/dial_local,callednum=${FRI2_ROUTER_PROCESS_EXTENSION},typeof=${FRI2_ROUTER_PROCESS_DEFINED}))
exten => _X.,n,ExecIf($["${FRI2_ROUTER_PROCESS_MODE}" == "2"]?AGI(agi://127.0.0.1/dial_outbound,callednum=${FRI2_ROUTER_PROCESS_EXTENSION},trunkid=${FRI2_ROUTER_PROCESS_DEFINED},backline=${FRI2_ROUTER_PROCESS_BACKLINE}))
exten => _X.,n,hangup

; for local exten voicemail after hangup cleanup check
exten => h,1,NoOp(HANGUPED CHECKING VOICEMAIL)
exten => h,n,ExecIf($["${FRIVM_STATUS}" == "1"]?AGI(agi://127.0.0.1/frivm,act=cleanup))
exten => h,n,ExecIf($["${FRI_SYSRECORDS_STATUS}" == "1"]?AGI(agi://127.0.0.1/sysrecords,act=cleanup))

[app-exten]
; normal
exten => _X.,1,NoOp('Extencall from '${CALLERID(num)}' to '${EXTEN})
exten => _X.,n,Set(CHANNEL(language)=${CURLANG})
exten => _X.,n,Set(__FRI2_EFET_ONETOUCHMONITOR=1)
exten => _X.,n,AGI(agi://127.0.0.1/router,routerline=1,callednum=${EXTEN})
exten => _X.,n,ExecIf($["${FRI2_AGISTATUS}" != "1"]?Macro(REASON,NOVALID))
exten => _X.,n,ExecIf($["${FRI2_AGISTATUS}" != "1"]?Hangup())
exten => _X.,n,ExecIf($["${FRI2_ROUTER_PROCESS_MODE}" == "1"]?AGI(agi://127.0.0.1/dial_local,callednum=${FRI2_ROUTER_PROCESS_EXTENSION},typeof=${FRI2_ROUTER_PROCESS_DEFINED}))
exten => _X.,n,ExecIf($["${FRI2_ROUTER_PROCESS_MODE}" == "2"]?AGI(agi://127.0.0.1/dial_outbound,callednum=${FRI2_ROUTER_PROCESS_EXTENSION},trunkid=${FRI2_ROUTER_PROCESS_DEFINED},backline=${FRI2_ROUTER_PROCESS_BACKLINE}))
exten => _X.,n,hangup

; for pickup only
exten => _*.,1,Pickup(${EXTEN:1}@PICKUPMARK)
exten => _*.,n,Hangup()

; for local exten voicemail after hangup cleanup check
exten => h,1,NoOp(HANGUPED CHECKING VOICEMAIL)
exten => h,n,ExecIf($["${FRIVM_STATUS}" == "1"]?AGI(agi://127.0.0.1/frivm,act=cleanup))
exten => h,n,ExecIf($["${FRI_SYSRECORDS_STATUS}" == "1"]?AGI(agi://127.0.0.1/sysrecords,act=cleanup))

; ---------------------------
; sub applications
; ---------------------------
[sub-findlocalexten]
exten => _X.,1,NoOp(Finding extension ${EXTEN})
exten => _X.,n,Set(CHANNEL(language)=${CURLANG})
exten => _X.,n,Set(__FRI2_EFET_ONETOUCHMONITOR=1)
exten => _X.,n,Set(__FRI2_CALLFROMQUEUE=1)
exten => _X.,n,AGI(agi://127.0.0.1/dial_local,callednum=${EXTEN},typeof=extension,diallocal_failed=nothing,dialargs=tT,ringtime=${FRI2_FINDLOCAL_RINGTIME})

; automatic call from outside
[sub-autocall]
exten => _X.,1,NoOp('autocall to '${EXTEN})
exten => _X.,n,AGI(agi://127.0.0.1/friautocall,act=maxcurrent)
exten => _X.,n,ExecIf($["${FRI_AUTOCALL_STATUS}" != "1"]?Hangup())
exten => _X.,n,Set(CHANNEL(language)=${CURLANG})
exten => _X.,n,Set(__FRI2_EFET_ONETOUCHMONITOR=1)
exten => _X.,n,AGI(agi://127.0.0.1/router,routerline=1,callednum=${EXTEN})
exten => _X.,n,ExecIf($["${FRI2_AGISTATUS}" != "1"]?Hangup())
exten => _X.,n,ExecIf($["${FRI2_ROUTER_PROCESS_MODE}" == "1"]?AGI(agi://127.0.0.1/dial_local,callednum=${FRI2_ROUTER_PROCESS_EXTENSION},typeof=${FRI2_ROUTER_PROCESS_DEFINED},diallocal_failed=nothing))
exten => _X.,n,ExecIf($["${FRI2_ROUTER_PROCESS_MODE}" == "2"]?AGI(agi://127.0.0.1/dial_outbound,callednum=${FRI2_ROUTER_PROCESS_EXTENSION},trunkid=${FRI2_ROUTER_PROCESS_DEFINED},backline=${FRI2_ROUTER_PROCESS_BACKLINE,diallocal_failed=nothing}))
exten => _X.,n,hangup
exten => h,1,noop(AUTOCALL CLEANUP)
exten => h,n,AGI(agi://127.0.0.1/friautocall,act=caller_cleanup)

; automatic call callback
[sub-autocall-callback]
exten => _X.,1,NoOp('outgoing callback')
exten => _X.,n,Set(CHANNEL(language)=${CURLANG})
exten => _X.,n,Set(CALLERID(num)=${FRI_AUTOCALL_CALLERID})
exten => _X.,n,goto(app-trunk,${EXTEN},1)
exten => _X.,n,hangup

;; fax operation
;[app-sendfax]
;exten => inprocess,1,NoOp('*** SEND FAX ID '${FRI2_FAXQUEUEID}' ***')
;exten => inprocess,n,GotoIf($["${FRI2_FAXSENDANNOUNCE}"=="0"]?sendfax,1)
;exten => inprocess,n,set(FRI2_PLAYSENDFAXCOUNT=0)
;exten => inprocess,n(playsendfax),Background(freeiris/sendfax);
;exten => inprocess,n,set(FRI2_PLAYSENDFAXCOUNT=$[${FRI2_PLAYSENDFAXCOUNT}+1])
;exten => inprocess,n,GotoIf($["${FRI2_PLAYSENDFAXCOUNT}"=="${FRI2_FAXSENDANNOUNCE}"]?sendfax,1)
;exten => inprocess,n,goto(app-sendfax,inprocess,playsendfax)
;exten => inprocess,n,hangup();
;; detected go to fax
;exten => _X,1,goto(app-sendfax,sendfax,1)
;exten => fax,1,NoOp('*** REMOTE AUTO-ANSWER FAX DETECTED ***')
;exten => fax,n,goto(app-sendfax,sendfax,1)
;; do sending fax
;exten => sendfax,1,NoOp('*** SENDING FAX NOW ***')
;exten => sendfax,n,AGI(agi://127.0.0.1/fax?mode=sendfax&faxid=${FRI2_FAXQUEUEID})
;exten => sendfax,n,hangup()
;; when hangup get all data
;exten => h,1,deadAGI(agi://127.0.0.1/fax?mode=sendover&faxid=${FRI2_FAXQUEUEID})

[app-receivefax]
exten => _X.,1,NoOp(**** RECEIVE FAX ACCOUNT '${ACCOUNTCODE}' ****)
exten => _X.,n,AGI(agi://127.0.0.1/fax,mode=receivefax,receiver=${EXTEN})
exten => _X.,n,hangup()
exten => h,1,AGI(agi://127.0.0.1/fax,mode=receiveover)

; ---------------------------
; macro
; ---------------------------
[macro-REASON]
exten => s,1,noop('normal reason')
exten => s,n,Goto(reason-${ARG1},1)
exten => reason-NOVALID,1,Playback(pbx-invalid,NOANSWER)
exten => reason-CHANUNAVAIL,1,Playback(vm-chanunavail,NOANSWER)
exten => reason-BUSY,1,Playback(vm-isonphone,NOANSWER)
